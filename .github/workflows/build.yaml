---

name: CD
on:
  push:

jobs:
  build-concrexit:
    name: Build concrexit image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          file: ./infra/concrexit/Dockerfile
          push: true
          tags: |
            ghcr.io/svthalia/concrexit:${{ github.sha }}
          cache-from: type=gha,scope=${{ github.ref }}-concrexit
          cache-to: type=gha,mode=max,scope=${{ github.ref }}-concrexit

  build-nginx:
    name: Build nginx image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./infra/nginx
          push: true
          tags: |
            ghcr.io/svthalia/concrexit-nginx:${{ github.sha }}
          cache-from: type=gha,scope=${{ github.ref }}-concrexit-nginx
          cache-to: type=gha,mode=max,scope=${{ github.ref }}-concrexit-nginx

  deploy-staging:
    name: Deploy to docker-staging
    environment: docker-staging
    runs-on: ubuntu-latest
    needs: [build-concrexit, build-nginx]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir ~/.ssh
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          echo "$DEPLOY_SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
        env:
          SSH_KNOWN_HOSTS: ${{ vars.SSH_KNOWN_HOSTS }}
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}

      - name: Create .env files
        run: |
          cp infra/.env.public.docker-staging infra/.env.public
          echo "$SECRETS_FILE" > infra/.env.secret
          echo "TAG=$TAG" > infra/.env
        env:
          SECRETS_FILE: ${{ secrets.SECRETS_FILE }}
          TAG: ${{ github.sha }}

      - name: Update .env files
        run: |
          rsync infra/.env deploy@docker-staging.thalia.nu:/var/lib/concrexit/.env
          rsync infra/.env.public deploy@docker-staging.thalia.nu:/var/lib/concrexit/.env.public
          rsync infra/.env.secret deploy@docker-staging.thalia.nu:/var/lib/concrexit/.env.secret
          rsync infra/docker-compose.yml deploy@docker-staging.thalia.nu:/var/lib/concrexit/docker-compose.yml
