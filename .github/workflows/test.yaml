---

name: Linting and Testing
on:
  - push
  - pull_request

jobs:
  codestyle:
    name: Codestyle
    runs-on: ubuntu-18.04
    container: thalia/concrexit-dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run black
        run: make blackcheck

  linting:
    name: Linting
    runs-on: ubuntu-18.04
    container: thalia/concrexit-dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run pylint
        run: make pylint

  tests:
    name: Django Tests
    runs-on: ubuntu-18.04
    container: thalia/concrexit-dependencies
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: thalia
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run tests
        run: make test

      - name: Report coverage
        run: make coverage

      - name: Create coverage report
        run: make covhtml

      - name: Save coverage report
        uses: actions/upload-artifact@v1
        with:
          name: coverage-html
          path: covhtml

  documentation-tests:
    name: Documentation Tests
    runs-on: ubuntu-18.04
    container: thalia/concrexit-dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run doctest
        run: make doctest

      - name: Run Sphinx
        run: make docs

      - name: Run API docs script
        run: |
          make apidocs
          git diff --exit-code

      - name: Save documentation HTML
        uses: actions/upload-artifact@v1
        with:
          name: docs-html
          path: docs/_build

  upload-coverage:
    name: Deploy Coverage Report
    runs-on: ubuntu-18.04
    needs: [tests]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: coverage-html
          path: html

      - name: Create URL safe version of GITHUB_REF
        run: echo "GITHUB_REF_SLUG=$(echo \"${GITHUB_REF#refs/heads/}\"| iconv -t ascii//TRANSLIT | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr A-Z a-z)" >> "${GITHUB_ENV}"

      - name: Sync files to S3
        run: aws s3 sync --only-show-errors html "s3://thalia-coverage/${GITHUB_REF_SLUG}/"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  upload-docs:
    name: Deploy Documentation
    runs-on: ubuntu-18.04
    needs: [documentation-tests]
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: docs-html
          path: html

      - name: Create URL safe version of GITHUB_REF
        run: echo "GITHUB_REF_SLUG=$(echo \"${GITHUB_REF#refs/heads/}\" | iconv -t ascii//TRANSLIT | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+|-+$//g' | tr A-Z a-z)" >> "${GITHUB_ENV}"

      - name: Sync files to S3
        run: aws s3 sync --only-show-errors html "s3://thalia-documentation/${GITHUB_REF_SLUG}/"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-18.04
    needs: [codestyle, tests, documentation-tests]
    env:
      DOCKER_TAG: thalia/concrexit:${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login --username "thaliawww" --password-stdin

      - name: Build new Docker image
        run: docker build --quiet --build-arg "source_commit=${{ github.sha }}" --tag "${DOCKER_TAG}" .

      - name: Push new Docker image
        run: docker push "${DOCKER_TAG}"
