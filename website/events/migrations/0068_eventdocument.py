# Generated by Django 4.1.7 on 2023-03-22 19:58

from django.db import migrations, models
import django.db.models.deletion


def populate_eventdocument(apps, schema_editor):
    EventDocument = apps.get_model("documents", "EventDocument")
    NewEventDocument = apps.get_model("events", "EventDocument")
    for event_document in EventDocument.objects.all():
        NewEventDocument.objects.create(
            document_ptr=event_document.document_ptr,
            owner=event_document.owner,
            # For some reason we need to copy all fields, because
            # Django uses an INSERT query on the Document table.
            created=event_document.created,
            file=event_document.file,
            members_only=event_document.members_only,
            name=event_document.name,
        )


class Migration(migrations.Migration):
    dependencies = [
        ("activemembers", "0042_alter_membergroup_photo"),
        ("documents", "0010_auto_20181219_2146"),
        ("events", "0067_event_show_map_location"),
    ]
    run_before = [("documents", "0017_delete_eventdocument")]

    operations = [
        migrations.CreateModel(
            name="EventDocument",
            fields=[
                (
                    "document_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="documents.document",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="activemembers.membergroup",
                        verbose_name="owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "event document",
                "verbose_name_plural": "event documents",
                "permissions": (
                    ("override_owner", "Can access event document as if owner"),
                ),
            },
            bases=("documents.document",),
        ),
        migrations.RunPython(populate_eventdocument, migrations.RunPython.noop),
    ]
