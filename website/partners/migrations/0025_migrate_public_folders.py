# Generated by Django 4.0.4 on 2022-05-27 07:44
import os

from django.db import migrations


def _clear_unused_files(storage, existing_images, path):
    if storage.exists(f"partners/{path}"):
        files = set(storage.listdir(f"partners/{path}")[1])
        existing_images = set(map(lambda x: os.path.basename(x), existing_images))
        for file in files.difference(existing_images):
            storage.delete(f"partners/{path}/{file}")


def forwards_func(apps, schema_editor):
    Partner = apps.get_model('partners', 'Partner')
    PartnerImage = apps.get_model('partners', 'PartnerImage')
    Vacancy = apps.get_model('partners', 'Vacancy')

    existing_partner_logos = []
    existing_partner_headers = []
    existing_partner_images = []
    existing_vacancy_logos = []

    for item in Partner.objects.all():
        if item.logo:
            item.logo.name = item.logo.name[7:]
            existing_partner_logos.append(item.logo.name)
        if item.site_header:
            item.site_header.name = item.site_header.name[7:]
            existing_partner_headers.append(item.site_header.name)
        item.save()

    _clear_unused_files(Partner().logo.storage, existing_partner_logos, "logos")
    _clear_unused_files(Partner().site_header.storage, existing_partner_headers, "headers")

    for item in Vacancy.objects.all():
        if item.company_logo:
            item.company_logo.name = item.company_logo.name[7:]
            existing_vacancy_logos.append(item.company_logo.name)
        item.save()

    _clear_unused_files(Vacancy().company_logo.storage, existing_vacancy_logos, "vacancy-logos")

    for item in PartnerImage.objects.all():
        if item.image:
            item.image.name = item.image.name[7:]
            existing_partner_images.append(item.image.name)
        item.save()

    _clear_unused_files(PartnerImage().image.storage, existing_partner_images, "images")



def reverse_func(apps, schema_editor):
    Partner = apps.get_model('partners', 'Partner')
    PartnerImage = apps.get_model('partners', 'PartnerImage')
    Vacancy = apps.get_model('partners', 'Vacancy')

    for item in Partner.objects.all():
        if item.logo:
            item.logo.name = f"public/{item.logo.name}"
        if item.site_header:
            item.site_header.name = f"public/{item.site_header.name}"
        item.save()

    for item in Vacancy.objects.all():
        if item.company_logo:
            item.company_logo.name = f"public/{item.company_logo.name}"
        item.save()

    for item in PartnerImage.objects.all():
        if item.image:
            item.image.name = f"public/{item.image.name}"
        item.save()


class Migration(migrations.Migration):

    dependencies = [
        ('partners', '0024_alter_partner_logo_alter_partner_site_header_and_more'),
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func)
    ]
