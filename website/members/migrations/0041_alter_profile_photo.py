# Generated by Django 4.0.4 on 2022-05-27 07:44
import os

from django.db import migrations, models
import members.models.profile
import thaliawebsite.storage.backend


def forwards_func(apps, schema_editor):
    Profile = apps.get_model('members', 'Profile')

    existing_images = []

    for item in Profile.objects.filter(photo__isnull=False):
        item.photo.name = item.photo.name[7:]
        existing_images.append(item.photo.name)
        item.save()

    # This deletes unused images from the filesystem
    storage = Profile().photo.storage
    if storage.exists("avatars"):
        files = set(storage.listdir("avatars")[1])
        existing_images = set(map(lambda x: os.path.basename(x), existing_images))
        for file in files.difference(existing_images):
            storage.delete(f"avatars/{file}")


def reverse_func(apps, schema_editor):
    Profile = apps.get_model('members', 'Profile')

    for item in Profile.objects.filter(photo__isnull=False):
        item.photo.name = f"public/{item.photo.name}"
        item.save()


class Migration(migrations.Migration):

    dependencies = [
        ('members', '0040_remove_profile_auto_renew'),
    ]

    operations = [
        migrations.AlterField(
            model_name='profile',
            name='photo',
            field=models.ImageField(blank=True, null=True, storage=thaliawebsite.storage.backend.get_public_storage, upload_to=members.models.profile._profile_image_path, verbose_name='Photo'),
        ),
        migrations.RunPython(forwards_func, reverse_func),
    ]
