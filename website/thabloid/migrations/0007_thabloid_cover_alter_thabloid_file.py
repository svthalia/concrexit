# Generated by Django 4.2 on 2023-04-12 17:53

import os
import django.core.validators
from django.db import migrations, models
import thabloid.models


def populate_thabloid_cover(apps, schema_editor):
    Thabloid = apps.get_model("thabloid", "Thabloid")

    storage = Thabloid._meta.get_field("file").storage

    for thabloid in Thabloid.objects.all():
        try:
            dst, _ = os.path.splitext(thabloid.file.name)
            cover_path = os.path.join(
                os.path.dirname(dst), "pages", os.path.basename(dst), "001.png"
            )

            if storage.exists(cover_path):
                file = storage.open(cover_path, "rb")

                thabloid.cover = file
                thabloid.save()

                file.close()
                print(f"Populated cover for {thabloid}")
        except:
            print(f"Failed to populate cover for {thabloid}")


class Migration(migrations.Migration):
    dependencies = [
        ("thabloid", "0006_make_thabloids_private"),
    ]

    operations = [
        migrations.AddField(
            model_name="thabloid",
            name="cover",
            field=models.ImageField(
                null=True, upload_to=thabloid.models.thabloid_cover_filename
            ),
        ),
        migrations.AlterField(
            model_name="thabloid",
            name="file",
            field=models.FileField(
                upload_to=thabloid.models.thabloid_filename,
                validators=[django.core.validators.FileExtensionValidator(["pdf"])],
            ),
        ),
        migrations.RunPython(populate_thabloid_cover, migrations.RunPython.noop),
        migrations.AlterField(
            model_name="thabloid",
            name="cover",
            field=models.ImageField(upload_to=thabloid.models.thabloid_cover_filename),
        ),
    ]
