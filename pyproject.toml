[tool.poetry]
name = "concrexit"
version = "0.0.dev"
description = "New new Thalia website, now with extra Django."
authors = ["Thalia Technicie <www@thalia.nu>"]
license = "AGPL-3.0-or-later"

[tool.poetry.dependencies]
python = "^3.9"
django-localflavor = "3.1"
freezegun = "1.2.2"
bleach = {extras = ["css"], version = "^5.0.0"}
djangorestframework = "3.14.0"
django-ical = "1.8.3"
django-libsass = "0.8.0"
python-magic = "0.4.27"
Pillow = "9.3.0"
Django = "4.1.3"
django-compressor = "4.1"
psycopg2 = {version = "2.9.5", optional = true}
bcrypt = "4.0.1"
argon2_cffi = "21.3.0"
firebase-admin = "6.0.1"
sentry-sdk = "1.11.1"
django-sendfile2 = "0.7.0"
django-queryable-properties = "1.8.3"
google-api-python-client = "2.68.0"
django-oauth-toolkit = "2.2.0"
django-cors-headers = "3.13.0"
django-debug-toolbar = "3.7.0"
django-admin-autocomplete-filter = "0.7.1"
PyYAML = "6.0"
pydocstyle = "6.1.1"
django-bootstrap5 = "^22.1"
django-tinymce = "^3.4.0"
beautifulsoup4 = "^4.11.1"
django-storages = "^1.12.3"
boto3 = "^1.23.7"
gunicorn = "^20.1.0"

# docs requirements
recommonmark = { version = "0.7.1", optional = true }
sphinx = { version = "5.3.0", optional = true }
qrcode = {version = "^7.3.1", extras = ["pil"]}
django-drf-filepond = "^0.4.1"
django-filepond-widget = "^0.7.0"

[tool.poetry.extras]
docs = ["recommonmark", "sphinx"]
postgres = ["psycopg2"]

[tool.poetry.dev-dependencies]
django-template-check = "0.4.0"
factory_boy = "3.2.1"
pydenticon = "0.3.1"
Faker = "15.3.4"
coverage = {extras = ["toml"], version = "^6.0.0"}
isort = "5.10.1"
black = "22.10.0"
pylint = "2.15.7"
pylint-django = "2.5.3"
pre-commit = "2.20.0"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.coverage.run]
branch = true
source = ["website"]
omit = ["website/manage.py", "website/thaliawebsite/wsgi.py", "website/thaliawebsite/settings.py", "website/*/migrations/*", "website/*/test*"]

[tool.coverage.report]
precision = 2
skip_covered = true
show_missing = true
fail_under = 65.0

[tool.black]
exclude = '(/(\.eggs|\.git|\.tox)/|migrations)'

[tool.isort]
profile = "black"
skip_glob = ["*/migrations/*"]
sections = [
    "FUTURE",
    "STDLIB",
    "DJANGO",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER",
]

known_django = ["django"]
known_first_party = [
    "website",
    "activemembers",
    "announcements",
    "documents",
    "education",
    "events",
    "mailinglists",
    "members",
    "merchandise",
    "newsletters",
    "partners",
    "payments",
    "photos",
    "pizzas",
    "promotion",
    "pushnotifications",
    "registrations",
    "sales",
    "shortlinks",
    "singlepages",
    "thabloid",
    "thaliawebsite",
    "utils",
]

[tool.pylint.main]
ignore = "migrations"

jobs = 4

load-plugins = [
    "pylint_django",
    "pylint.extensions.docstyle",
    "pylint.extensions.for_any_all",
    "pylint.extensions.check_elif",
    "pylint.extensions.empty_comment",
    "pylint.extensions.typing",
]
django-settings-module = "thaliawebsite.settings"

[tool.pylint.format]
expected-line-ending-format = "LF"
max-line-length = "88"

[tool.pylint."messages control"]
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "too-many-ancestors",
    "no-member",
    "redefined-outer-name",
    "unused-argument",
    "protected-access",
    "arguments-differ",
    "invalid-name",
    "line-too-long",
    "abstract-method",
    "attribute-defined-outside-init",
    "logging-fstring-interpolation",
    "too-many-arguments",
    "too-many-locals",
    "too-many-public-methods",
    "unused-variable",
    "redefined-builtin",
    "too-many-lines",
    "too-many-statements",
    "too-many-instance-attributes",
    "too-many-branches",
    "too-many-public-methods",
    "too-many-return-statements",
    "consider-using-ternary",
    "consider-using-any-or-all",
    "unsupported-binary-operation",
    "docstring-first-line-empty",
]

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where it
# should appear only once). See also the "--disable" option for examples.
enable = [
    "c-extension-no-member",
    "super-with-arguments",
]
